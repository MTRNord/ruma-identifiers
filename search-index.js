var searchIndex = {};
searchIndex["ruma_identifiers"] = {"doc":"Crate **ruma_identifiers** contains types for [Matrix](https://matrix.org/) identifiers\nfor events, rooms, room aliases, and users.","items":[[4,"Host","ruma_identifiers","The host name of an URL.",null,null],[13,"Domain","","A DNS domain name, as &#39;.&#39; dot-separated labels.\nNon-ASCII labels are encoded in punycode per IDNA.",0,null],[13,"Ipv4","","An IPv4 address.\n`Url::host_str` returns the serialization of this address,\nas four decimal integers separated by `.` dots.",0,null],[13,"Ipv6","","An IPv6 address.\n`Url::host_str` returns the serialization of that address between `[` and `]` brackets,\nin the format per [RFC 5952 *A Recommendation\nfor IPv6 Address Text Representation*](https://tools.ietf.org/html/rfc5952):\nlowercase hexadecimal with maximal `::` compression.",0,null],[3,"EventId","","A Matrix event ID.",null,null],[3,"RoomAliasId","","A Matrix room alias ID.",null,null],[3,"RoomId","","A Matrix room ID.",null,null],[3,"UserId","","A Matrix user ID.",null,null],[4,"Error","","An error encountered when trying to parse an invalid ID string.",null,null],[13,"InvalidCharacters","","The ID&#39;s localpart contains invalid characters.",1,null],[13,"InvalidHost","","The domain part of the the ID string is not a valid IP address or DNS name.",1,null],[13,"MaximumLengthExceeded","","The ID exceeds 255 bytes.",1,null],[13,"MinimumLengthNotSatisfied","","The ID is less than 4 characters.",1,null],[13,"MissingDelimiter","","The ID is missing the colon delimiter between localpart and server name.",1,null],[13,"MissingSigil","","The ID is missing the leading sigil.",1,null],[11,"eq","","",1,null],[11,"fmt","","",1,null],[11,"eq","","",2,null],[11,"ne","","",2,null],[11,"hash","","",2,null],[11,"fmt","","",2,null],[11,"eq","","",3,null],[11,"ne","","",3,null],[11,"hash","","",3,null],[11,"fmt","","",3,null],[11,"eq","","",4,null],[11,"ne","","",4,null],[11,"hash","","",4,null],[11,"fmt","","",4,null],[11,"eq","","",5,null],[11,"ne","","",5,null],[11,"hash","","",5,null],[11,"fmt","","",5,null],[11,"fmt","","",1,null],[11,"description","","",1,null],[11,"new","","Attempts to generate an `EventId` for the given origin server with a localpart consisting\nof 18 random ASCII characters.",2,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"hostname","","Returns a `Host` for the event ID, containing the server name (minus the port) of the\noriginating homeserver.",2,null],[11,"opaque_id","","Returns the event&#39;s opaque ID.",2,null],[11,"port","","Returns the port the originating homeserver can be accessed on.",2,null],[11,"new","","Attempts to generate a `RoomId` for the given origin server with a localpart consisting of\n18 random ASCII characters.",4,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"hostname","","Returns a `Host` for the room ID, containing the server name (minus the port) of the\noriginating homeserver.",4,null],[11,"opaque_id","","Returns the event&#39;s opaque ID.",4,null],[11,"port","","Returns the port the originating homeserver can be accessed on.",4,null],[11,"hostname","","Returns a `Host` for the room alias ID, containing the server name (minus the port) of\nthe originating homeserver.",3,null],[11,"alias","","Returns the room&#39;s alias.",3,null],[11,"port","","Returns the port the originating homeserver can be accessed on.",3,null],[11,"new","","Attempts to generate a `UserId` for the given origin server with a localpart consisting of\n12 random ASCII characters.",5,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"hostname","","Returns a `Host` for the user ID, containing the server name (minus the port) of the\noriginating homeserver.",5,null],[11,"localpart","","Returns the user&#39;s localpart.",5,null],[11,"port","","Returns the port the originating homeserver can be accessed on.",5,null],[11,"from","","",1,{"inputs":[{"name":"parseerror"}],"output":{"name":"error"}}],[11,"fmt","","",2,null],[11,"fmt","","",3,null],[11,"fmt","","",4,null],[11,"fmt","","",5,null],[11,"serialize","","",2,null],[11,"serialize","","",3,null],[11,"serialize","","",4,null],[11,"serialize","","",5,null],[11,"deserialize","","",2,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"deserialize","","",3,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"deserialize","","",4,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"deserialize","","",5,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"try_from","","Attempts to create a new Matrix event ID from a string representation.",2,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"try_from","","Attempts to create a new Matrix room alias ID from a string representation.",3,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"try_from","","Attempts to create a new Matrix room ID from a string representation.",4,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"try_from","","Attempts to create a new Matrix user ID from a string representation.",5,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"to_owned","","Return a copy of `self` that owns an allocated `String` but does not borrow an `&amp;Url`.",0,null],[11,"parse","","Parse a host: either an IPv6 address in [] square brackets, or a domain.",0,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"hash","","",0,null],[11,"partial_cmp","","",0,null],[11,"lt","","",0,null],[11,"le","","",0,null],[11,"gt","","",0,null],[11,"ge","","",0,null],[11,"cmp","","",0,null],[11,"eq","","",0,null],[11,"ne","","",0,null],[11,"fmt","","",0,null],[11,"clone","","",0,null],[11,"fmt","","",0,null]],"paths":[[4,"Host"],[4,"Error"],[3,"EventId"],[3,"RoomAliasId"],[3,"RoomId"],[3,"UserId"]]};
initSearch(searchIndex);
